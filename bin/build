#!/usr/bin/env bash
set -eo pipefail

echo "---> Elixir Buildpack"

# Get args
layersdir=$1
otp_version=25.3.2.12
elixir_version=1.14.5

# Download OTP
echo "---> Downloading and extracting OTP"
otplayer="$layersdir/otp"
mkdir -p "$otplayer"
otp_url="https://github.com/Naveen-is-here/heroku-otp/releases/download/$otp_version/heroku-22.tar.gz"
wget -q -O - "$otp_url" | tar -xzf - -C "$otplayer" || { echo "Failed to download OTP"; exit 1; }
mv "$otplayer/OTP-$otp_version"/* "$otplayer"
rm -r "$otplayer/OTP-$otp_version"
"$otplayer"/Install -minimal "$otplayer" > /dev/null

# Download Elixir
echo "---> Downloading and extracting Elixir"
short_otp_version=$(echo "$otp_version" | awk 'match($0, /^[0-9][0-9]/) { print substr( $0, RSTART, RLENGTH )}')
elixirlayer="$layersdir/elixir"
mkdir -p "$elixirlayer"
elixir_url="https://repo.hex.pm/builds/elixir/v$elixir_version-otp-$short_otp_version.zip"
wget -q -O "$elixirlayer/elixir.zip" "$elixir_url" || { echo "Failed to download Elixir"; exit 1; }
unzip -q "$elixirlayer/elixir.zip" -d "$elixirlayer"
rm "$elixirlayer/elixir.zip"
chmod +x "$elixirlayer/bin"/*

# Make Erlang and Elixir available during launch
echo -e '[types]\nlaunch = true\ncache = true\nbuild = true' > "$otplayer.toml"
echo -e '[types]\nlaunch = true\ncache = true\nbuild = true' > "$elixirlayer.toml"

# Make Erlang and Elixir available to this script
export LANG=C.UTF-8
export LC_ALL=C.UTF-8
export PATH="$otplayer/bin:$elixirlayer/bin:$PATH"


# Setup Rebar and Hex
echo "---> Installing Rebar"
mix local.rebar --force > /dev/null
echo "---> Installing Hex"
mix local.hex --force > /dev/null

# Install and compile packages
echo "---> Installing and compiling packages"
mix do deps.get, deps.compile

# Compile project
echo "---> Compiling project"
mix compile

